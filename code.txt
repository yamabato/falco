Falco
隼の学名Falco peregrinus

stack
    0(main)
    1~

    いくつも作れる

map
    文字列とそれに対応する数値を収められる
    変数をスタックに入れて扱いそのスタック番号を保持する

memory
    一つの値だけはいる。

行頭が;だとコメントとなり無視される。
行頭が:だとラベルとして扱われる。
ラベルの一文字めが_であるものは標準関数内で使われている可能性があるため、非推奨となる。

命令一覧

[-1]はスタックトップの値、[-2]はその下を表す

スタック操作関連
psh(push)
    psh 123
    psh "abc"

    スタックトップに値を入れる。値が文字列であった場合は、一文字ごとにruneのコードポイントに直しリトルエンディアン的にスタックに入れていく。

pop(pop)
    pop

    スタックトップから値を取り出し、memoryにうつす。

del(delte)
    del

    スタックトップから値を取り出すが、popとはちがい、memoryには移さない。

mem(memory)
    mem

    memoryから値を取得し、スタックトップに入れる。

mks(make stack)
    mks

    新しいスタックを作成する。スタック番号は変えない。

mov(move)
    mov 1

    psh 1
    mov

    現在のスタックから指定された番号のスタックに値を移動させる。スタック番号は変えない。

    pop
    cng 2
    mem
    cng 0

cng(change)
    cng 2

    psh 0
    cng

    操作中のスタックを現在のスタックから指定した番号のスタックに変える。引数として指定することも、スタックの値として指定することも可能。

cpy(copy)
    cpy

    スタックトップの値をコピーする。

    pop
    mem
    mem

len(length)
    len

    現在のスタックの長さを取得する。その長さを入れる前の長さを示す。

    [1 2 3] -> [1 2 3 3]

clr(clear)
    clr

    現在のスタックの中身を全て消去する。

stn(stack number)
    stn

    現在のスタック番号を取得する。

nst(number of stacks)
    nst

    現在のスタック数を取得する。

条件分岐関連
cmp(comparison)
    cmp

    [-2] == [-1]なら0
    [-2] <  [-1]なら-1
    [-2] >  [-1]なら1をスタックにいれる

    [-1],[-2]はスタックから消える

lnm(line number)
    lnm

    現在の行番号を取得する

jmp(jump)
    jmp :l
    jmp 10

    psh 10
    jmp

    スタックトップの値が0なら指定されたラベルまたは行番号までジャンプする。スタックの値から指定可能その場合は、[-2]がブール[-1]が行番号

map操作関連
ins(insertion)
    ins name

    mapのキーnameに[-1]の値を紐づける。[-1]はスタックから消える。
    nameの先頭が_であると標準関数などにより上書きされる可能性がある。

get(get)
    get name

    mapのキーnameに紐づけられた値を取得し、スタックに入れる。

dlk(delete key)
    dlk name

    mapのキーnameを削除する。

計算関連
add(addition)
    add

    [-2] + [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

sub(subtraction)
    sub

    [-2] - [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

mul(multiplication)
    mul

    [-2] * [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

div(division)
    div

    [-2] / [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

pow(power)
    pow

    [-2] ** [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

mod(modular arithmetic)
    mod

    [-2] % [-1]をスタックに入れる。
    [-1],[-2]はスタックから消える。

io関連
inp(input)
    inp

    標準入力から入力を取得し、文字列として扱ってスタックに入れる。
    この時の動作はpshで文字列を指定した時と同じ

chr(character)
    chr

    スタックトップの値を文字コードとして扱いその文字を表示する。改行しない。

prt(print)
    prt

    スタックトップの値を数値としてそのまま表示する。改行しない。

関数関連
cal(call)
    cal _abs

    falcoコードで書かれた標準関数を呼び出す。
    引数はスタック上で[arg... arg2 arg1]の順になるようにする。
    この命令を実行すると、スタックに戻り行番号もつむ
    この関数は与えられた戻り行番号をメモリに格納するため、メモリの値の扱いについて注意する必要がある。